# build stage
FROM node:10.16-alpine as build-stage

# Create app folder
RUN mkdir /app
WORKDIR /app

# Copy all files to app folder
COPY package*.json ./
RUN npm install --progress=false
#RUN rm -rf package-lock.json
COPY . /app
# Environment app
ARG VUE_APP_SECURE
ARG VUE_APP_URL
ARG VUE_APP_PORT
ARG VUE_APP_SENTRY_DSN
ARG VUE_APP_SENTRY_TRACE_SAMPLE_RATE
ARG VUE_APP_ENV
ENV VUE_APP_SECURE $VUE_APP_SECURE
ENV VUE_APP_URL $VUE_APP_URL
ENV VUE_APP_PORT $VUE_APP_PORT
ENV VUE_APP_SENTRY_DSN $VUE_APP_SENTRY_DSN
ENV VUE_APP_SENTRY_TRACE_SAMPLE_RATE $VUE_APP_SENTRY_TRACE_SAMPLE_RATE
ENV VUE_APP_ENV $VUE_APP_ENV
RUN npm run build

# production stage
FROM nginx:stable-alpine as production-stage

# Environment app
ARG VUE_APP_SECURE
ARG VUE_APP_URL
ARG VUE_APP_PORT
ARG VUE_APP_SENTRY_DSN
ARG VUE_APP_SENTRY_TRACE_SAMPLE_RATE
ARG VUE_APP_ENV
ENV VUE_APP_SECURE $VUE_APP_SECURE
ENV VUE_APP_URL $VUE_APP_URL
ENV VUE_APP_PORT $VUE_APP_PORT
ENV VUE_APP_SENTRY_DSN $VUE_APP_SENTRY_DSN
ENV VUE_APP_SENTRY_TRACE_SAMPLE_RATE $VUE_APP_SENTRY_TRACE_SAMPLE_RATE
ENV VUE_APP_ENV $VUE_APP_ENV

COPY --from=build-stage /app/dist /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
